// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Store {
  id        String     @id @default(uuid())
  name      String
  userId    String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  color     Color[]
  category  Category[]
  product   Product[]
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  image     String
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id        String    @id @default(uuid())
  name      String
  hexCode   String
  storeId   String
  store     Store     @relation(fields: [storeId], references: [id])
  createdAt DateTime  @default(now())
  Product   Product[]

  @@index([storeId])
}

model Product {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  description String
  size        SizeT[]
  price       Decimal
  stock       Int
  rating      String   @default("0")
  isShown     Boolean  @default(true)
  storeId     String
  store       Store    @relation(fields: [storeId], references: [id])
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  colorId     String
  color       Color    @relation(fields: [colorId], references: [id])
  images      Images[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([colorId])
  @@index([storeId])
  @@index([categoryId])
}

model Category {
  id        String    @id @default(uuid())
  storeId   String
  store     Store     @relation(fields: [storeId], references: [id])
  name      String
  createdAt DateTime  @default(now())
  product   Product[]

  @@index([storeId])
}

model SizeT {
  id        String   @id @default(uuid())
  label     String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([productId])
}

model Images {
  id        String   @id @default(uuid())
  url       String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([productId])
}
